#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 8.0y
#  in conjunction with Tcl version 8.6
#    Sep 03, 2023 03:13:45 AM CDT  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import mb_om2

_debug = True  # False to eliminate debug printing from callback functions.


def main(*args):
    """Main entry point for the application."""
    global root
    root = tk.Tk()
    root.protocol("WM_DELETE_WINDOW", root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = mb_om2.Toplevel1(_top1)
    startup()
    root.mainloop()


def startup():
    setup_menubutton()
    create_optionmenu()


def setup_menubutton():
    _w1.Frame1.configure(relief="flat")
    selection = tk.IntVar()
    mnuBtn = tk.Menubutton(_w1.Frame1, text="Menubutton")
    mnuBtn.pack(expand=True, side="top", fill="both", anchor="nw")
    mnuBtn.menu = tk.Menu(
        mnuBtn, disabledforeground="black", selectcolor="seagreen2", tearoff=0
    )
    mnuBtn.submenu1 = tk.Menu(
        mnuBtn,
        activebackground="#d9d9d9",
        activeforeground="black",
        background="#919191",
        disabledforeground="#6d6d6d",
        foreground="black",
        tearoff=0,
    )
    mnuBtn.submenu2 = tk.Menu(
        mnuBtn,
        activebackground="#d9d9d9",
        activeforeground="black",
        background="#919191",
        disabledforeground="#6d6d6d",
        foreground="black",
        tearoff=0,
    )
    mnuBtn["menu"] = mnuBtn.menu
    mnuBtn.menu.add_cascade(label="File", menu=mnuBtn.submenu1)
    mnuBtn.menu.add_cascade(label="Help", menu=mnuBtn.submenu2)

    mnuBtn.submenu1.add_command(label="New", command=on_mnuFileNew)
    mnuBtn.submenu1.add_command(label="Open", command=on_mnuFileOpen)
    mnuBtn.submenu1.add_separator()
    mnuBtn.submenu1.add_command(label="Exit", command=on_mnuFileExit)

    mnuBtn.submenu2.add_command(label="About", command=on_mnuHelpAbout)
    mnuBtn.submenu2.add_separator()
    mnuBtn.submenu2.add_command(label="Help", command=on_mnuHelpHelp)


def on_mnuFileExit():
    sys.exit()


def on_mnuHelpAbout():
    print("Into on_mnuHelpAbout")


def on_mnuHelpHelp():
    print("Into on_mnuHelpHelp")


def on_mnuFileNew():
    print("Into on_mnuFileNew")


def on_mnuFileOpen():
    print("Into on_mnuFileOpen")


def create_optionmenu():
    global optionlist
    global returnval
    optionlist = ("Red", "Orange", "Yellow", "Green", "Blue", "Violet")
    # Set the container frame to flat relief
    _w1.Frame2.configure(relief="flat")
    returnval = tk.StringVar()
    optMenu = ttk.OptionMenu(
        _w1.Frame2, returnval, None, *optionlist, command=optionmenu_callback
    )
    returnval.set("OptionMenu")
    optMenu.pack(expand=True, side="top", fill="both", anchor="nw")


def optionmenu_callback(*args):
    global returnval
    which = returnval.get()
    print(f"OptionMenu returned {which}")


def on_btnExit(*args):
    if _debug:
        print("mb_om2_support.on_btnExit")
        for arg in args:
            print("    another arg:", arg)
        sys.stdout.flush()
    sys.exit()


if __name__ == "__main__":
    mb_om2.start_up()
