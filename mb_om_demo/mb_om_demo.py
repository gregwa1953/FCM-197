#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Aug 31, 2023 06:43:49 AM CDT  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import mb_om_demo_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = '#8ba5cc' # Closest X11 color: 'LightSkyBlue3'
_ana1color = '#c5cc8b' # Closest X11 color: 'wheat3'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x321+1001+451")
        top.minsize(1, 1)
        top.maxsize(2545, 1410)
        top.resizable(0,  0)
        top.title("Menubutton and Optionmenu Demo")
        top.configure(highlightbackground="navajowhite3")
        top.configure(highlightcolor="black")

        self.top = top
        self.mbReturnValue = tk.StringVar()
        self.omReturnValue = tk.StringVar()

        self.mbFrame = tk.Frame(self.top)
        self.mbFrame.place(x=116, y=100, height=35, width=125)
        self.mbFrame.configure(relief='solid')
        self.mbFrame.configure(borderwidth="2")
        self.mbFrame.configure(relief="solid")
        self.mbFrame.configure(highlightbackground="navajowhite3")
        self.omFrame = tk.Frame(self.top)
        self.omFrame.place(x=357, y=100, height=35, width=125)
        self.omFrame.configure(relief='solid')
        self.omFrame.configure(borderwidth="2")
        self.omFrame.configure(relief="solid")
        self.omFrame.configure(highlightbackground="navajowhite3")
        self.Label1 = tk.Label(self.top)
        self.Label1.place(x=116, y=70, height=21, width=125)
        self.Label1.configure(activebackground="#ebcdb1")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#9a8668")
        self.Label1.configure(font="-family {DejaVu Sans} -size 11 -weight bold")
        self.Label1.configure(highlightbackground="navajowhite3")
        self.Label1.configure(text='''Menubutton''')
        self.Label2 = tk.Label(self.top)
        self.Label2.place(x=357, y=70, height=22, width=125)
        self.Label2.configure(activebackground="#ebcdb1")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#9a8668")
        self.Label2.configure(font="-family {DejaVu Sans} -size 11 -weight bold")
        self.Label2.configure(highlightbackground="navajowhite3")
        self.Label2.configure(text='''OptionMenu''')
        self.Button1 = tk.Button(self.top)
        self.Button1.place(x=490, y=10, height=34, width=91)
        self.Button1.configure(activebackground="beige")
        self.Button1.configure(borderwidth="2")
        self.Button1.configure(command=mb_om_demo_support.on_btnExit)
        self.Button1.configure(compound='left')
        self.Button1.configure(disabledforeground="#9a8668")
        self.Button1.configure(font="-family {DejaVu Sans} -size 11 -weight bold")
        self.Button1.configure(highlightbackground="navajowhite3")
        self.Button1.configure(text='''Exit''')
        self.Label3 = tk.Label(self.top)
        self.Label3.place(x=116, y=170, height=21, width=125)
        self.Label3.configure(activebackground="#ebcdb1")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#9a8668")
        self.Label3.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Label3.configure(highlightbackground="navajowhite3")
        self.Label3.configure(text='''Label''')
        self.Label3.configure(textvariable=self.mbReturnValue)
        self.mbReturnValue.set('''Label''')
        self.Label4 = tk.Label(self.top)
        self.Label4.place(x=357, y=170, height=21, width=125)
        self.Label4.configure(activebackground="#ebcdb1")
        self.Label4.configure(compound='left')
        self.Label4.configure(disabledforeground="#9a8668")
        self.Label4.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Label4.configure(highlightbackground="navajowhite3")
        self.Label4.configure(text='''Label''')
        self.Label4.configure(textvariable=self.omReturnValue)
        self.omReturnValue.set('''Label''')

def start_up():
    mb_om_demo_support.main()

if __name__ == '__main__':
    mb_om_demo_support.main()




